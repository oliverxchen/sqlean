select_list: select_item ("," [INLINE_COMMENT] select_item)* [","] [INLINE_COMMENT]
?select_item: select_item_unaliased
    | select_item_aliased
select_item_aliased: expression as_alias
!select_item_unaliased: expression
    | "*"

?base_expression: table_referenced_field
    | standard_function_expression
    | window_function_expression
    | MACRO
    | CNAME
    | constant

?constant: SIGNED_NUMBER
    | string
    | NULL
    | boolean

?string: DOUBLE_QUOTED_STRING
    | SINGLE_QUOTED_STRING
DOUBLE_QUOTED_STRING: "\"" _STRING_ESC_INNER "\""
SINGLE_QUOTED_STRING: "'" _STRING_ESC_INNER "'"

?boolean: TRUE
    | FALSE

table_referenced_field: CNAME "." CNAME
    | explicit_table_name "." CNAME

standard_function_expression: function_name "(" arg_list ")"
window_function_expression: function_name "(" [arg_list] ")" "OVER"i over_clause
!function_name: CNAME
    | ["`" PROJECT_ID  "`."] CNAME "." CNAME

over_clause: "(" window_specification  ")" // or named_window
window_specification: [partition_modifier] [window_orderby_modifier] // [window_frame_clause] TODO
partition_modifier: PARTITION_BY field_list
PARTITION_BY: "PARTITION"i WS "BY"i
window_orderby_modifier: ORDER_BY orderby_list

?case_expression: common_case_expression
    | separate_case_expression
!common_case_expression: "CASE"i base_expression when_list [else_clause] "END"i
!separate_case_expression: "CASE"i when_list [else_clause] "END"i
when_list: when_item+
!when_item: "WHEN"i expression "THEN"i base_expression
!else_clause: "ELSE"i base_expression

indented_expression: expression
!?expression: base_expression
    | unary_bool_operation
    | binary_bool_operation
    | binary_comparison_operation
    | like_comparison_operation
    | in_comparison_operation
    | "(" expression ")" -> parenthetical_expression
    | case_expression
binary_bool_operation: expression BINARY_BOOL_OPERATOR expression

arg_list: arg_item ("," arg_item)*
!arg_item: interval
    | expression
    | expression "AS"i data_type
    | interval "FROM"i expression
!data_type: "BOOL"i
    | "BYTES"i ["(" INT ")"]
    | "DATE"i
    | "DATETIME"i
    | "INT64"i
    | "INT"i
    | "SMALLINT"i
    | "INTEGER"i
    | "BIGINT"i
    | "TINYINT"i
    | "BYTEINT"i
    | "NUMERIC"i
    | "DECIMAL"i
    | "BIGNUMERIC"i
    | "BIGDECIMAL"i
    | "FLOAT64"i
    | "STRING"i
?interval: DATE_INTERVAL
    | TIME_INTERVAL
DATE_INTERVAL.2: "DAY"i
    | "DAYOFYEAR"i
    | "MONTH"i
    | "WEEK"i
    | "ISOWEEK"i
    | "YEAR"i
    | "ISOYEAR"i
TIME_INTERVAL.2: "MICROSECOND"i
    | "MILLISECOND"i
    | "SECOND"i
    | "MINUTE"i
    | "HOUR"i

binary_comparison_operation: base_expression BINARY_COMPARISON_OPERATOR base_expression
BINARY_BOOL_OPERATOR.2: AND
    | OR
AND: "AND"i
OR: "OR"i

BINARY_COMPARISON_OPERATOR: "="
    | ">"
    | ">="
    | "<"
    | "<="
    | NOT_EQUAL
NOT_EQUAL: "!="
    | "<>"

like_comparison_operation: base_expression [NOT] LIKE string
LIKE: "LIKE"i

in_comparison_operation: base_expression [NOT] IN in_list
IN: "IN"i
in_list: "(" constant ("," constant)* ")"

?unary_bool_operation: leading_unary_bool_operation
    | trailing_unary_bool_operation
leading_unary_bool_operation: LEADING_UNARY_BOOL_OPERATOR base_expression
trailing_unary_bool_operation: base_expression trailing_unary_bool_operator
LEADING_UNARY_BOOL_OPERATOR: NOT
trailing_unary_bool_operator: IS [NOT] NULL
    | IS [NOT] TRUE
    | IS [NOT] FALSE
NOT: "NOT"i
IS: "IS"i
NULL: "NULL"i
TRUE: "TRUE"i
FALSE: "FALSE"i

field_list: base_expression ("," base_expression)*

!groupby_modifier: GROUP_BY field_list [having_clause]
GROUP_BY.2: "GROUP"i WS "BY"i

!having_clause: "HAVING"i indented_expression

!orderby_modifier: ORDER_BY orderby_list
ORDER_BY.2: "ORDER"i WS "BY"i
orderby_list: orderby_item ("," orderby_item)*
!orderby_item: base_expression ["ASC"i | "DESC"i]

%import common.CNAME
%import common.INT
%import common.SIGNED_NUMBER
%import common._STRING_ESC_INNER
%import alias.as_alias
%import comment.INLINE_COMMENT
%import table.explicit_table_name
%import table.PROJECT_ID
%import table.DATASET_ID
%import common.WS
%import jinja.MACRO
