with

cte as (
	select * from table_a
),

{{ really_long_named_macro_cte("with", "many", "arguments", "so", "that", "black", "goes", "over", "the", "line", "length", "limit") }}

select * from macro_cte

---

WITH

cte AS (
  SELECT
    *,
  FROM
    table_a
),

{{
  really_long_named_macro_cte(
    "with",
    "many",
    "arguments",
    "so",
    "that",
    "black",
    "goes",
    "over",
    "the",
    "line",
    "length",
    "limit",
  )
}}

SELECT
  *,
FROM
  macro_cte

---

Tree(
    "query_file",
    [
        Tree(
            "query_expr",
            [
                Token("WITH", "with"),
                Tree(
                    "with_clause",
                    [
                        Token("CNAME", "cte"),
                        Token("AS", "as"),
                        Token("LPAR", "("),
                        Tree(
                            "select_expr",
                            [
                                Tree("select_type", [Token("SELECT", "select")]),
                                Tree(
                                    "select_list",
                                    [Tree("select_item_unaliased", [Tree("star_expression", [Token("STAR", "*")])])],
                                ),
                                Token("FROM", "from"),
                                Tree("from_clause", [Tree("simple_table_name", [Token("CNAME", "table_a")])]),
                            ],
                        ),
                        Token("RPAR", ")"),
                    ],
                ),
                Token("COMMA", ","),
                Tree(
                    "with_clause",
                    [
                        Tree(
                            "macro",
                            [
                                Token("VAR_START_STR", "{{"),
                                Token("CNAME", "really_long_named_macro_cte"),
                                Token("LPAR", "("),
                                Tree(
                                    "python_arg_list",
                                    [
                                        Tree(
                                            "python_arg_item",
                                            [Tree("python_arg_value", [Token("DOUBLE_QUOTED_STRING", '"with"')])],
                                        ),
                                        Token("COMMA", ","),
                                        Tree(
                                            "python_arg_item",
                                            [Tree("python_arg_value", [Token("DOUBLE_QUOTED_STRING", '"many"')])],
                                        ),
                                        Token("COMMA", ","),
                                        Tree(
                                            "python_arg_item",
                                            [Tree("python_arg_value", [Token("DOUBLE_QUOTED_STRING", '"arguments"')])],
                                        ),
                                        Token("COMMA", ","),
                                        Tree(
                                            "python_arg_item",
                                            [Tree("python_arg_value", [Token("DOUBLE_QUOTED_STRING", '"so"')])],
                                        ),
                                        Token("COMMA", ","),
                                        Tree(
                                            "python_arg_item",
                                            [Tree("python_arg_value", [Token("DOUBLE_QUOTED_STRING", '"that"')])],
                                        ),
                                        Token("COMMA", ","),
                                        Tree(
                                            "python_arg_item",
                                            [Tree("python_arg_value", [Token("DOUBLE_QUOTED_STRING", '"black"')])],
                                        ),
                                        Token("COMMA", ","),
                                        Tree(
                                            "python_arg_item",
                                            [Tree("python_arg_value", [Token("DOUBLE_QUOTED_STRING", '"goes"')])],
                                        ),
                                        Token("COMMA", ","),
                                        Tree(
                                            "python_arg_item",
                                            [Tree("python_arg_value", [Token("DOUBLE_QUOTED_STRING", '"over"')])],
                                        ),
                                        Token("COMMA", ","),
                                        Tree(
                                            "python_arg_item",
                                            [Tree("python_arg_value", [Token("DOUBLE_QUOTED_STRING", '"the"')])],
                                        ),
                                        Token("COMMA", ","),
                                        Tree(
                                            "python_arg_item",
                                            [Tree("python_arg_value", [Token("DOUBLE_QUOTED_STRING", '"line"')])],
                                        ),
                                        Token("COMMA", ","),
                                        Tree(
                                            "python_arg_item",
                                            [Tree("python_arg_value", [Token("DOUBLE_QUOTED_STRING", '"length"')])],
                                        ),
                                        Token("COMMA", ","),
                                        Tree(
                                            "python_arg_item",
                                            [Tree("python_arg_value", [Token("DOUBLE_QUOTED_STRING", '"limit"')])],
                                        ),
                                    ],
                                ),
                                Token("RPAR", ")"),
                                Token("VAR_END_STR", "}}"),
                            ],
                        )
                    ],
                ),
                Tree(
                    "select_expr",
                    [
                        Tree("select_type", [Token("SELECT", "select")]),
                        Tree(
                            "select_list",
                            [Tree("select_item_unaliased", [Tree("star_expression", [Token("STAR", "*")])])],
                        ),
                        Token("FROM", "from"),
                        Tree("from_clause", [Tree("simple_table_name", [Token("CNAME", "macro_cte")])]),
                    ],
                ),
            ],
        )
    ],
)
